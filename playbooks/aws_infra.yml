# Create volume
# import the key
# create the instance
---
- hosts: localhost
  gather_facts: no
  vars_files: 
    - keys.yml
  vars: 
    default_vpc_subnet: subnet-8b371aec
    BASE_AMI: ami-098bb5d92c8886ca1
    AWS_ZONE: us-east-1d
  tasks: 
    - name: Create new EBS volume
      ec2_vol: 
        aws_acces_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        zone: "{{ AWS_ZONE }}"
        volume_size: "1"  
        name: web_volume
        device_name: /dev/xvdf
     register: vol_info

    - name: Create AWS key paid using Ansible key
      ec2_key: 
        aws_acces_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: ansible_key
        key_material: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
    
    - name: Provision: Instance
      ec2: 
        aws_acces_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance_type: t2.micro
        keypair: ansible_key  
        image: "{{ BASE_AMI }}"
        assign_public_ip: yes
        vpc_subnet_id: "{{ default_vpc_subnet }}"
        wait: true   
        count: 1
        instance_tags: 
          Name: web-server
          image: yes
      register: ec2

    - name: Attache volume
      ec2-vol: 
        aws_acces_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance: "{{ ec2.instances[0].id }}"
        id: "{{ vol_info.volume_id }}"
        device_name: /dev/xvdf
        delete_on_termination: no
    - name: Add host to inventory
      add_host: 
        hostname: "{{ item.public_ip }}"
        groupname: webgroup
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      loop: "{{ ec2.instances }}"

## Configure instance
- hosts: webgroup
  gather_facts: no
  remote_user: ec2-user
  tasks:
    - name: Wait for SSH to come up
      wait_for_connection: 
        delay: 5
        timeout: 90

    - name: Create new partition
      become: yes
      parted: 
        device: /dev/xvdf
        number: 1
        state: present   
      register: parted_output
   
    - name: Format new partition
      become: yes
      filesystem: 
        fstype: ext4
        dev: /dev/xvdf1
        

    - name: Mount web content volume 
      become: yes  
      mount: 
        path: /var/www/
        src: /dev/xvdf1
        fstype: ext4
        state: mounted

    - name: Install HTTPD
      yum: 
        name: httpd
        state: latest

    - name: Collect base ansible facts
      setup: 
    
    - name: Collect instance facts
      ec2_metadata_facts: 
     
# Create AMI
- hosts: localhost
  gather_facts: yes
  vars_files: 
    - keys.yml
  tasks: 
    - name: Checkout volume
      debug: 
        msg: "{{ item.device }} is mounted on {{ item.mount }}"
      loop: "{{ hostvars[groups['webgroup'][0]]['ansible_mounts'] }}"
      loop_control: 
        label: "{{ item.device }}"

    - name: Stop instance for AMI creation
      ec2: 
        aws_acces_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance_id: "{{ hostvars[groups['webgroup'][0]]['ansible_ec2_instance_id'] }}"
        state: stopped
        wait: yes

    - name: Create AMI
      ec2_ami: 
        aws_acces_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance_id: "{{ hostvars[groups['webgroup'][0]]['ansible_ec2_instance_id'] }}"
        name: wencontentAMI
        state: present
  




   

    
