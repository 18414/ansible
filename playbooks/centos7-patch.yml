---
- hosts: doc
  become: yes
  user: ansible
  vars: 
    kernel_v: "{{ ansible_version }}"
  tasks:
    - name: get kernel version
      shell: uname -r | grep '^[0-9]*\.[0-9]*' -o
      #shell: uname -r | awk -F"." '{print $6}'
      register: prepatch_kernel

    - debug: msg="{{prepatch_kernel.stdout}}"

    - name: Add cstate and reboot bios if kernel is 4.8
      shell: echo "Do what you need to do"
      when: prepatch_kernel.stdout == "4.8"

    - name: Run check list 
      script: /home/ansible/ansible/playbooks/checklist.sh

    - name: install wget 
      yum: name=wget state=latest

    - name: patch the Kernel
      shell: "{{ item }}"
      with_items:     
        wget https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
        gpg --quiet --with-fingerprint RPM-GPG-KEY-elrepo.org
        rpm --import RPM-GPG-KEY-elrepo.org
        wget http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
        yum install elrepo-release-7.0-2.el7.elrepo.noarch.rpm
        yum --disablerepo='*' --enablerepo=elrepo-kernel install kernel-ml
  
   # - name: Patch the OS and kernel 
   #   yum: 
   #     name: '*'
   #     state: latest
   #     exclude: kernel*
    - name: Check for reboot hint 
      shell: LAST_KERNEL=$(rpm -q --last kernel | awk 'NR==1{sub(/kernel-/,""); print $1}'); CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then echo 'reboot'; else echo 'no'; fi
      ignore_errors: true
      register: reboot_hint
    - name: Rebooting
      command: shutdown -r now "Reboot required for update kernel"
      async: 0
      poll: 0
      sudo: true
      ignore_errors: true
      when: 'reboot_hint.stdout.find("reboot") != -1'
      register: rebooting

    - name: Wait for thing to reboot..
      pause: seconds=60
      when: rebooting | changed
   
        
    - name: get kernel version
      shell: uname -r | grep '^[0-9]*\.[0-9]*' -o
      #shell: uname -r | awk -F"." '{print $6}'
      register: postpatch_kernel

    - debug: msg="{{postpatch_kernel.stdout}}"

    - name: Add cstate and reboot bios if kernel is 4.8
      shell: echo "Do what you need to do"
      when: postpatch_kernel.stdout == "4.8"

