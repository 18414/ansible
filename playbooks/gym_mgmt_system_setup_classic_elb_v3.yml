---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning
    vars:
      region: us-east-2
    tasks:
      - name: Launch the new EC2 Instance
        ec2:
          instance_type: t2.micro
          key_name: aws_final
          image: ami-01eb7a7f8688ed90b
          user_data: "{{ lookup('file', '/home/ansible/ansible/playbooks/ans_env.sh')}}"
          region: us-east-2
          group: Newsc
          vpc_subnet_id: subnet-052af449
          assign_public_ip: yes
          wait: yes
          count_tag:
            application: Gym-management-system
          exact_count: 2
        register: ec2

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile
                      dest="./hosts"
                      regexp={{ item.public_ip }}
                      insertafter="[doc]" line={{ item.public_ip }}
        with_items: "{{ ec2.instances }}"


      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region=us-east-2 state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: Docker
      - name: make known host entry
        shell: ssh-keyscan {{ item.public_ip }} >> /home/ansible/.ssh/known_hosts
        with_items: "{{ ec2.instances }}"

  - name: Provision Classic ELB
    hosts: localhost
    connection: local
    gather_facts: False
    tasks:
      - name: Configure Classic ELB
        elb_classic_lb:
          name: gymsystem
          scheme: internet-facing
          region: us-east-2
          state: present
          purge_instance_ids: true
          health_check:
            ping_protocol: http
            ping_port: 80
            ping_path: "/"
            response_timeout: 5
            interval: 30
            unhealthy_threshold: 2
            healthy_threshold: 10        
          subnets:
            - subnet-052af449
            - subnet-817c44e9
          listeners:
            - protocol: http
              load_balancer_port: 80
              instance_port: 80
          instance_ids: "{{ item }}"
        with_items: "{{ ec2.id }}"
         
